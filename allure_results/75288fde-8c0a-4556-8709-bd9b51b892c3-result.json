{"name": "Проверка, что заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1021, 82). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n0   chromedriver                        0x00000001035bdd18 chromedriver + 4996376\n1   chromedriver                        0x00000001035b55da chromedriver + 4961754\n2   chromedriver                        0x0000000103158d10 chromedriver + 388368\n3   chromedriver                        0x00000001031abdb6 chromedriver + 728502\n4   chromedriver                        0x00000001031a9ccd chromedriver + 720077\n5   chromedriver                        0x00000001031a7797 chromedriver + 710551\n6   chromedriver                        0x00000001031a664f chromedriver + 706127\n7   chromedriver                        0x000000010319a258 chromedriver + 655960\n8   chromedriver                        0x00000001031c99b2 chromedriver + 850354\n9   chromedriver                        0x0000000103199c48 chromedriver + 654408\n10  chromedriver                        0x00000001031c9b6e chromedriver + 850798\n11  chromedriver                        0x00000001031e7a00 chromedriver + 973312\n12  chromedriver                        0x00000001031c9753 chromedriver + 849747\n13  chromedriver                        0x0000000103198635 chromedriver + 648757\n14  chromedriver                        0x0000000103198e5e chromedriver + 650846\n15  chromedriver                        0x0000000103584000 chromedriver + 4759552\n16  chromedriver                        0x0000000103588f18 chromedriver + 4779800\n17  chromedriver                        0x00000001035895e5 chromedriver + 4781541\n18  chromedriver                        0x0000000103566aa9 chromedriver + 4639401\n19  chromedriver                        0x00000001035898d9 chromedriver + 4782297\n20  chromedriver                        0x0000000103558044 chromedriver + 4579396\n21  chromedriver                        0x00000001035a5a08 chromedriver + 4897288\n22  chromedriver                        0x00000001035a5c03 chromedriver + 4897795\n23  chromedriver                        0x00000001035b51de chromedriver + 4960734\n24  libsystem_pthread.dylib             0x00007fff2047d8fc _pthread_start + 224\n25  libsystem_pthread.dylib             0x00007fff20479443 thread_start + 15", "trace": "self = <test_feed_page.TestFeedPage object at 0x10b833770>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b9b94aeb46183a99ac217d645e545cc\")>\ncreate_user_data = {'email': 'rdfsbatgrh@yandex.ru', 'password': 'rcztnndmlf'}\n\n    @allure.title(\"Проверка, что заказы пользователя из раздела «История заказов» отображаются на странице «Лента заказов»\")\n    def test_users_orders_in_feed(self, driver, create_user_data):\n>       helpers.make_order(driver, create_user_data)\n\ntests/test_feed_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers.py:18: in make_order\n    main_page.close_order_modal()\npages/main_page.py:64: in close_order_modal\n    self.wait_and_find_element(MainPageLocators.ORDER_MODAL_X_BUTTON).click()\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10b8c9d30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...fff2047d8fc _pthread_start + 224\\\\n25  libsystem_pthread.dylib             0x00007fff20479443 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1021, 82). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       0   chromedriver                        0x00000001035bdd18 chromedriver + 4996376\nE       1   chromedriver                        0x00000001035b55da chromedriver + 4961754\nE       2   chromedriver                        0x0000000103158d10 chromedriver + 388368\nE       3   chromedriver                        0x00000001031abdb6 chromedriver + 728502\nE       4   chromedriver                        0x00000001031a9ccd chromedriver + 720077\nE       5   chromedriver                        0x00000001031a7797 chromedriver + 710551\nE       6   chromedriver                        0x00000001031a664f chromedriver + 706127\nE       7   chromedriver                        0x000000010319a258 chromedriver + 655960\nE       8   chromedriver                        0x00000001031c99b2 chromedriver + 850354\nE       9   chromedriver                        0x0000000103199c48 chromedriver + 654408\nE       10  chromedriver                        0x00000001031c9b6e chromedriver + 850798\nE       11  chromedriver                        0x00000001031e7a00 chromedriver + 973312\nE       12  chromedriver                        0x00000001031c9753 chromedriver + 849747\nE       13  chromedriver                        0x0000000103198635 chromedriver + 648757\nE       14  chromedriver                        0x0000000103198e5e chromedriver + 650846\nE       15  chromedriver                        0x0000000103584000 chromedriver + 4759552\nE       16  chromedriver                        0x0000000103588f18 chromedriver + 4779800\nE       17  chromedriver                        0x00000001035895e5 chromedriver + 4781541\nE       18  chromedriver                        0x0000000103566aa9 chromedriver + 4639401\nE       19  chromedriver                        0x00000001035898d9 chromedriver + 4782297\nE       20  chromedriver                        0x0000000103558044 chromedriver + 4579396\nE       21  chromedriver                        0x00000001035a5a08 chromedriver + 4897288\nE       22  chromedriver                        0x00000001035a5c03 chromedriver + 4897795\nE       23  chromedriver                        0x00000001035b51de chromedriver + 4960734\nE       24  libsystem_pthread.dylib             0x00007fff2047d8fc _pthread_start + 224\nE       25  libsystem_pthread.dylib             0x00007fff20479443 thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Открываем страницу", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/login'"}], "start": 1728244969746, "stop": 1728244977215}, {"name": "Заполняем форму и логинимся пользователем", "status": "passed", "steps": [{"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//label[text()='Email']/following::input\"]"}], "start": 1728244977216, "stop": 1728244977244}, {"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//label[text()='Пароль']/following::input\"]"}], "start": 1728244977375, "stop": 1728244977405}, {"name": "Ожидаем модальное окно", "status": "passed", "steps": [{"name": "Ожидаем невидимости элемента на странице", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//div[contains(@class, 'Modal_modal_overlay__x2ZCr')]/parent::div\"]"}], "start": 1728244977462, "stop": 1728244977483}], "start": 1728244977462, "stop": 1728244977483}, {"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', '//button[text()=\"Войти\"]']"}], "start": 1728244977483, "stop": 1728244977505}], "parameters": [{"name": "user_data", "value": "{'email': 'rdfsbatgrh@yandex.ru', 'password': 'rcztnndmlf'}"}], "start": 1728244977216, "stop": 1728244977538}, {"name": "Ожидаем модальное окно", "status": "passed", "steps": [{"name": "Ожидаем невидимости элемента на странице", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//div[contains(@class, 'Modal_modal_overlay__x2ZCr')]/parent::div\"]"}], "start": 1728244977538, "stop": 1728244977556}], "start": 1728244977538, "stop": 1728244977556}, {"name": "Добавляем список ингредиентов в корзину", "status": "passed", "steps": [{"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//p[contains (text(), 'Флюоресцентная булка R2-D3')]/parent::a\"]"}], "start": 1728244977556, "stop": 1728244978604}, {"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//p[contains (text(), 'Соус Spicy-X')]/parent::a\"]"}], "start": 1728244978604, "stop": 1728244978626}, {"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//p[contains (text(), 'Мясо бессмертных моллюсков Protostomia')]/parent::a\"]"}], "start": 1728244978627, "stop": 1728244978647}, {"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//ul[contains (@class, 'BurgerConstructor_basket__list')]\"]"}], "start": 1728244978647, "stop": 1728244978669}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b9b94aeb46183a99ac217d645e545cc\")>"}], "start": 1728244977556, "stop": 1728244978706}, {"name": "Оформляем заказ", "status": "passed", "steps": [{"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//button[text()='Оформить заказ']\"]"}], "start": 1728244978706, "stop": 1728244978730}], "start": 1728244978706, "stop": 1728244978767}, {"name": "Ожидаем модальное окно", "status": "passed", "steps": [{"name": "Ожидаем невидимости элемента на странице", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', \"//div[contains(@class, 'Modal_modal_overlay__x2ZCr')]/parent::div\"]"}], "start": 1728244978768, "stop": 1728244978790}], "start": 1728244978767, "stop": 1728244978790}, {"name": "Закрываем окно с деталями заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1021, 82). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n0   chromedriver                        0x00000001035bdd18 chromedriver + 4996376\n1   chromedriver                        0x00000001035b55da chromedriver + 4961754\n2   chromedriver                        0x0000000103158d10 chromedriver + 388368\n3   chromedriver                        0x00000001031abdb6 chromedriver + 728502\n4   chromedriver                        0x00000001031a9ccd chromedriver + 720077\n5   chromedriver                        0x00000001031a7797 chromedriver + 710551\n6   chromedriver                        0x00000001031a664f chromedriver + 706127\n7   chromedriver                        0x000000010319a258 chromedriver + 655960\n8   chromedriver                        0x00000001031c99b2 chromedriver + 850354\n9   chromedriver                        0x0000000103199c48 chromedriver + 654408\n10  chromedriver                        0x00000001031c9b6e chromedriver + 850798\n11  chromedriver                        0x00000001031e7a00 chromedriver + 973312\n12  chromedriver                        0x00000001031c9753 chromedriver + 849747\n13  chromedriver                        0x0000000103198635 chromedriver + 648757\n14  chromedriver                        0x0000000103198e5e chromedriver + 650846\n15  chromedriver                        0x0000000103584000 chromedriver + 4759552\n16  chromedriver                        0x0000000103588f18 chromedriver + 4779800\n17  chromedriver                        0x00000001035895e5 chromedriver + 4781541\n18  chromedriver                        0x0000000103566aa9 chromedriver + 4639401\n19  chromedriver                        0x00000001035898d9 chromedriver + 4782297\n20  chromedriver                        0x0000000103558044 chromedriver + 4579396\n21  chromedriver                        0x00000001035a5a08 chromedriver + 4897288\n22  chromedriver                        0x00000001035a5c03 chromedriver + 4897795\n23  chromedriver                        0x00000001035b51de chromedriver + 4960734\n24  libsystem_pthread.dylib             0x00007fff2047d8fc _pthread_start + 224\n25  libsystem_pthread.dylib             0x00007fff20479443 thread_start + 15\n\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/admin/Documents/ya_praktitum/Diplom/Diplom_3/pages/main_page.py\", line 64, in close_order_modal\n    self.wait_and_find_element(MainPageLocators.ORDER_MODAL_X_BUTTON).click()\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Находим элемент на странице и ожидаем его видимости", "status": "passed", "parameters": [{"name": "locator", "value": "['xpath', '//div[contains (@class,\"Modal_modal__container__Wo2l_\")]/button[contains(@class, \"modal__close\")]']"}], "start": 1728244978790, "stop": 1728244978818}], "start": 1728244978790, "stop": 1728244979866}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1728244969745, "stop": 1728244979872, "uuid": "ef06058f-84e0-402e-a6df-a7da4854200f", "historyId": "f27e9a822e2d805fbfe8f69be86acb04", "testCaseId": "4180a9ae48b135523acefb4879c4448d", "fullName": "tests.test_feed_page.TestFeedPage#test_users_orders_in_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feed_page"}, {"name": "subSuite", "value": "TestFeedPage"}, {"name": "host", "value": "MacBook-Pro-Admin.local"}, {"name": "thread", "value": "21995-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feed_page"}]}